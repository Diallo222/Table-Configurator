/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 public/models/Table.gltf 
*/

import React, { useEffect , useRef } from "react";
import { useGLTF } from "@react-three/drei";
import * as THREE from "three";
import { useConfiguratorStore } from "../../store/hooks";
import { useFrame } from "@react-three/fiber";

const lerpSpeed = 10;
export function Table(props) {
  const { nodes, materials } = useGLTF("./models/Table.gltf");
  const { legs, legsColor, tableWidth } = useConfiguratorStore();

  useEffect(() => {
    materials.Metal.color = new THREE.Color(legsColor);
  },[legsColor])

  const plateRef = useRef();
  const leftLegsRef = useRef();
  const rightLegsRef = useRef();
  const tableWidthScale = tableWidth / 100;

  useFrame((state , delta) => {
    const targetScale = new THREE.Vector3(tableWidthScale, 1,1);
    plateRef.current.scale.lerp(targetScale, delta * lerpSpeed);

    const targetLeftPosition = new THREE.Vector3(-1.5 * tableWidthScale, 0, 0);
    leftLegsRef.current.position.lerp(targetLeftPosition, delta * lerpSpeed);
    
    const targetRightPosition = new THREE.Vector3(1.5 * tableWidthScale, 0, 0);
    rightLegsRef.current.position.lerp(targetRightPosition, delta * lerpSpeed);
   
  });
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        geometry={nodes.Plate.geometry}
        material={materials.Plate}
        ref={plateRef}
      />

      {legs === 0 ? (
        <>
          <mesh
            castShadow
            geometry={nodes.Legs01Left.geometry}
            material={materials.Metal}
            position={[-1.5, 0, 0]}
            ref={leftLegsRef}
          />
          <mesh
            castShadow
            geometry={nodes.Legs01Right.geometry}
            material={materials.Metal}
            position={[1.5, 0, 0]}
            ref={rightLegsRef}
          />
        </>
      ) : legs === 1 ? (
        <>
          <mesh
            castShadow
            geometry={nodes.Legs02Left.geometry}
            material={materials.Metal}
            position={[-1.5, 0, 0]}
            ref={leftLegsRef}
          />
          <mesh
            castShadow
            geometry={nodes.Legs02Right.geometry}
            material={materials.Metal}
            position={[1.5, 0, 0]}
            ref={rightLegsRef}
          />
        </>
      ) : (
        <>
          <mesh
            castShadow
            geometry={nodes.Legs03Left.geometry}
            material={materials.Metal}
            position={[-1.5, 0, 0]}
            ref={leftLegsRef}
          />
          <mesh
            castShadow
            geometry={nodes.Legs03Right.geometry}
            material={materials.Metal}
            position={[1.5, 0, 0]}
            ref={rightLegsRef}
          />
        </>
      )}
    </group>
  );
}

useGLTF.preload("./models/Table.gltf");
